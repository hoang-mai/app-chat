version: '3.7'

services:
  mysql:
    image: mysql:8
    container_name: mysql8
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: password
    volumes:
      - mysql-data:/var/lib/mysql
      - ./mysql-init:/docker-entrypoint-initdb.d
    networks:
      - service-network

  temporal:
    image: temporalio/auto-setup
    container_name: temporal
    ports:
      - "7233:7233"
    environment:
      - DB=mysql8
      - MYSQL_USER=temporal
      - MYSQL_PWD=temporal
      - MYSQL_SEEDS=mysql
      - MYSQL_DB=temporal
      - TEMPORAL_WEB_ENABLED=true
    depends_on:
      - mysql
    networks:
      - service-network

  temporal-ui:
    image: temporalio/ui:latest
    container_name: temporal-ui
    ports:
      - "8233:8080"
    environment:
      - TEMPORAL_ADDRESS=temporal:7233
    depends_on:
      - temporal
    networks:
      - service-network

  keycloak:
    image: quay.io/keycloak/keycloak:26.0.5
    container_name: keycloak
    ports:
      - "8081:8080"
    environment:
      - KC_BOOTSTRAP_ADMIN_USERNAME=admin
      - KC_BOOTSTRAP_ADMIN_PASSWORD=123456
      - DB_VENDOR=mysql
      - DB_ADDR=mysql
      - DB_PORT=3306
      - DB_DATABASE=keycloak
      - DB_USER=keycloak
      - DB_PASSWORD=keycloak
    command:
      - start-dev
      - --http-relative-path=/auth
    depends_on:
      - mysql
    networks:
      - service-network
  mongo:
    image: mongo:6.0
    container_name: mongo_db
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rootpassword
    volumes:
      - mongo_data:/data/db

  mongo-express:
    image: mongo-express:latest
    container_name: mongo_express
    restart: always
    ports:
      - "8089:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: rootpassword
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_BASICAUTH_USERNAME: root
      ME_CONFIG_BASICAUTH_PASSWORD: rootpassword

volumes:
  mysql-data:
  mongo_data:

networks:
  service-network:
    driver: bridge
